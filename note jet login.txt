make in middleware CheckRole.php
and add in handle function

   <?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;

class CheckRole
{
    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @return mixed
     */
    public function handle(Request $request, Closure $next, string $role)
    {
        if ($role == 'admin' && auth()->user()->role_id != 1) {
            abort(403);
        }

        if ($role == 'student' && auth()->user()->role_id != 2) {
            abort(403);
        }

        if ($role == 'teacher' && auth()->user()->role_id != 3) {
            abort(403);
        }
        if ($role == 'user' && auth()->user()->role_id != 4) {
            abort(403);
        }
        return $next($request);
    }
}




then add in kernel ->$routeMiddleware
        'role' => \App\Http\Middleware\CheckRole::class,
then add in Providers->AuthServicePro:
 public function boot()
    {
        $this->registerPolicies();

        Gate::define('manage-users', function (User $user) {
            return $user->role_id == 1;
        });
        Gate::define('manage-courses', function (User $user) {
            return $user->role_id == 3;
        });
        Gate::define('manage-tests', function (User $user) {
            return $user->role_id == 4;
        });
    }


then create a folder view/components in app and add class layout
like this
namespace App\View\Components;
use Illuminate\View\Component;

class UserLayout
{
    public function render()
    {
        return view('layouts.user');
    }
}
